# Automation Scripts Environment Configuration Template
# ==================================================
# Copy this file to .env and update with your actual paths
# .env is gitignored and will not be committed to the repository

# Project root directory (absolute path)
# This is where you cloned the automation-scripts repository
AUTOMATION_SCRIPTS_DIR="/path/to/your/automation-scripts"

# User information (usually auto-detected from shell, but can override)
# Uncomment and set if needed:
# USER="${USER}"
# HOME="${HOME}"

# ==================================================
# Setup Instructions
# ==================================================

# 1. Copy this template to create your local .env file:
#    cp .env.example .env

# 2. Edit .env and replace /path/to/your/automation-scripts with your actual path:
#    nano .env  # or your preferred editor

# 3. Make the environment variable persistent by adding to your shell profile:
#    echo 'export AUTOMATION_SCRIPTS_DIR="$HOME/path/to/automation-scripts"' >> ~/.bashrc
#    source ~/.bashrc

# 4. Verify the variable is set:
#    echo $AUTOMATION_SCRIPTS_DIR

# 5. Test it works:
#    cd $AUTOMATION_SCRIPTS_DIR
#    source scripts/setup-dev.sh

# ==================================================
# Systemd Services
# ==================================================

# For systemd services, use the environment variable in your service files:
# ExecStart=${AUTOMATION_SCRIPTS_DIR}/.venv/bin/python ${AUTOMATION_SCRIPTS_DIR}/modules/dictation/dictate.py
#
# Or use a generator script to create service files with substituted paths
# See: docs/ENVIRONMENT_SETUP.md for details

# ==================================================
# Notes
# ==================================================

# - This file (.env.example) is tracked in git as a template
# - Your actual .env file is gitignored (won't be committed)
# - Never commit files with your personal paths to the public repository
# - All scripts are designed to work with $AUTOMATION_SCRIPTS_DIR
